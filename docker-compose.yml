version: '3.8'

services:
  # Aplicación Python Flask
  app:
    build: .
    container_name: python-IAC
    ports:
      - "5000:5000"
    environment:
      - DEBUG_MODE=False
      - PORT=5000
    volumes:
      # Volumen para almacenamiento persistente de datos de la aplicación (si es necesario)
      - app_data:/app/data
    restart: unless-stopped
    networks:
      - app-network
    depends_on:
      - jenkins

  # Servicio Jenkins
  jenkins:
    image: jenkins/jenkins:lts-jdk17
    container_name: jenkins
    user: root  # Necesario para acceder al socket Docker
    ports:
      - "8081:8080"  # Puerto web de Jenkins
      - "50001:50000"  # Puerto para agentes Jenkins
    volumes:
      # Persistencia de datos de Jenkins
      - jenkins_home:/var/jenkins_home
      # Socket Docker del host - necesario para que Jenkins pueda crear contenedores
      - /var/run/docker.sock:/var/run/docker.sock:rw
      # Docker CLI - necesario para ejecutar comandos Docker desde Jenkins
      - /usr/bin/docker:/usr/bin/docker
      # Directorio para compartir archivos temporales entre Jenkins y contenedores de CI/CD
      - jenkins_tmp:/tmp/jenkins
      # Volumen compartido para build artifacts y dependencias
      - build_cache:/var/jenkins_workspaces
    environment:
      - JENKINS_OPTS="--prefix=/jenkins"
    restart: unless-stopped
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  jenkins_home:
    driver: local
  app_data:
    driver: local
  jenkins_tmp:
    driver: local
  build_cache:
    driver: local